{"version":3,"file":"static/js/724.0313c29b.chunk.js","mappings":"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","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/components/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    label: 'User email',\n    name: 'email',\n    type: 'email',\n    placeholder: 'Enter user email',\n    required: true,\n  },\n  password: {\n    label: 'User password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Enter user password (min 6 symbols)',\n    required: true,\n  },\n};\n\nexport default fields;\n","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport useForm from 'shared/hooks/useForm';\nimport TextFieldItem from 'shared/components/TextField';\n// import TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n\n  const { email, password } = state;\n  return (\n    <Box\n      marginTop={5}\n      textAlign=\"left\"\n      component=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <Stack spacing={3} marginBottom={4}>\n        <TextFieldItem\n          id={emailId}\n          value={email}\n          handleChange={handleChange}\n          {...fields.email}\n          required\n        />\n\n        <TextFieldItem\n          id={passwordId}\n          value={password}\n          handleChange={handleChange}\n          {...fields.password}\n        />\n      </Stack>\n      <Button variant=\"contained\" size=\"small\" type=\"submit\">\n        Login\n      </Button>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n\nLoginForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }} marginLeft={20}>\n      <Typography variant=\"h3\">Login Page</Typography>\n      <Typography variant=\"body2\">Enter your data for Login</Typography>\n      <LoginForm onSubmit={onLogin} />\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\n\nconst TextFieldItem = ({\n  id,\n  label,\n  value,\n  name,\n  handleChange,\n  type,\n  checked,\n  placeholder,\n  required,\n  pattern,\n}) => {\n  return (\n    <div>\n      {/* {label && <label htmlFor={id}>{label}</label>} */}\n      <TextField\n        label={label}\n        defaultValue=\"User email\"\n        id={id}\n        value={value}\n        checked={checked}\n        name={name}\n        onChange={handleChange}\n        type={type}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n      />\n    </div>\n  );\n};\n\nexport default TextFieldItem;\n\nTextFieldItem.defaultProps = {\n  type: 'text',\n  required: false,\n};\n\nTextFieldItem.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  //   className: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  pattern: PropTypes.string,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["email","password","label","name","type","placeholder","required","LoginForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","Box","marginTop","textAlign","component","Stack","spacing","marginBottom","TextField","id","value","fields","Button","variant","size","LoginPage","dispatch","useDispatch","sx","flexGrow","marginLeft","Typography","data","login","defaultProps","TextFieldItem","checked","pattern","defaultValue","onChange","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}